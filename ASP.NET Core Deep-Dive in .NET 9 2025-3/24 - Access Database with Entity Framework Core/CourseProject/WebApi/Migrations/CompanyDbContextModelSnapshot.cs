// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    partial class CompanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sales Department",
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Engineering Department",
                            Name = "Engineering"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Quanlity Assurance",
                            Name = "QA"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "John Doe",
                            Position = "Engineer",
                            Salary = 60000.0
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            Name = "Jane Smith",
                            Position = "Manager",
                            Salary = 75000.0
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            Name = "Sam Brown",
                            Position = "Technician",
                            Salary = 50000.0
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            Name = "Alice Johnson",
                            Position = "Analyst",
                            Salary = 55000.0
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            Name = "Bob Lee",
                            Position = "Developer",
                            Salary = 65000.0
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 2,
                            Name = "Carol Wang",
                            Position = "Designer",
                            Salary = 70000.0
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 3,
                            Name = "David Kim",
                            Position = "Support",
                            Salary = 48000.0
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 3,
                            Name = "Eve Rogers",
                            Position = "Consultant",
                            Salary = 72000.0
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 3,
                            Name = "Franklin Zhang",
                            Position = "Architect",
                            Salary = 80000.0
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 1,
                            Name = "Grace Liu",
                            Position = "Coordinator",
                            Salary = 53000.0
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 2,
                            Name = "Henry Thompson",
                            Position = "Specialist",
                            Salary = 62000.0
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 3,
                            Name = "Isabelle Nguyen",
                            Position = "Technician",
                            Salary = 57000.0
                        });
                });

            modelBuilder.Entity("WebApi.Models.Employee", b =>
                {
                    b.HasOne("WebApi.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebApi.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
